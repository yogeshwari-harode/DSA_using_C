#include<stdio.h>

int getMax(int nums[], int n) {
    int max = nums[0];
    int i;
    for (i = 1; i < n; i++)
        if (nums[i] > max)
            max = nums[i];
    return max;
}

void CountSort(int nums[], int n, int pass) {
    int output[n];
    // declare count array size 10 from 0-9 and initialize it with 0 in all 10 boxes
    int i, cnt[10] = { 0 };
 
    // count number of values
    for (i = 0; i < n; i++)
        cnt[(nums[i] / pass) % 10]++;
 
    // count index in sorted array
    for (i = 1; i < 10; i++)
        cnt[i] =cnt[i] + cnt[i - 1];
 
    // place the elements at a particular index to sort the array
    for (i = n - 1; i >= 0; i--) {
        output[cnt[(nums[i] / pass) % 10] - 1] = nums[i];
        cnt[(nums[i] / pass) % 10]--; 
    }
               
    // copy output in nums
    for (i = 0; i < n; i++)
        nums[i] = output[i];
}

void RadixSort(int nums[], int n) {
    int max = getMax(nums, n);

    // call CountSort algorithm for each digit 
    for (int pass = 1; max / pass > 0; pass *= 10)
        CountSort(nums, n, pass);
}
 
// print the array
void print(int nums[], int n) {
    int i;
    for (i = 0; i < n; i++)
        printf("%d ", nums[i]);
}
 
int main() {

    printf("Enter number of elements: ");
    int n= 0;
    scanf("%d", &n);
    int nums[n];
    printf("Enter elements: ");
    for(int i=0; i<n; i++){
        scanf("%d", &nums[i]);
    }
    RadixSort(nums, n);

    printf("Sorted Array is: ");
    print(nums, n);
    return 0;
}
