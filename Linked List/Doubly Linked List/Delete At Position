#include<stdio.h>
#include<stdlib.h>

struct node{
  int data;
  struct node *next;
  struct node *prev;
};

struct node *head,*tail;

void InsertAtEnd(){
    struct node *new_node;
    new_node=(struct node *)malloc(sizeof(struct node));
    printf("Enter new node data : ");
    scanf("%d",&new_node->data);
    new_node->prev=NULL;
    new_node->next=NULL;
    
    if(head==NULL)
    {
        head=new_node;
        tail=new_node;
    }
    else{
       tail->next=new_node;
       new_node->prev=tail;
       tail=new_node;
    }
}

void DeleteAtPosition(){
    int pos;
    struct node *temp,*temp2;
    temp=head;
    if(head==NULL){
        printf("Create List First,List is Empty\n");
        return;
    }
    else{
        printf("Enter position which node you want to delete : ");
        scanf("%d",&pos);
        if(pos==1){
            head=head->next;
            free(temp);
            temp=NULL;
            return ;
        }
        while(pos>1){
            temp=temp->next;
            pos--;
        }
       
        temp2=temp->prev;
        temp2->next=temp->next;
        temp->next->prev=temp2;
        free(temp);
        temp=NULL;
    }        
}

void Display(){
    struct node *temp;
    temp=head;
    if(head==NULL){
        printf("Create List First,List is Empty\n");
    }
    else{
        while(temp!=NULL){
            printf("%d ",temp->data);
            temp=temp->next;
        }
        printf("\n");
    }
}

int main(){
    int choice;
    while(1){
        printf("1. Create List\n2. Delete At position\n3. Display List\n4. Exit\n");
        scanf("%d",&choice);
        switch(choice){
            case 1: InsertAtEnd();
                break;
            case 2: DeleteAtPosition();
                break;
            case 3: Display();
                break;
            case 4: exit(0);
            default:printf("you entered wrong choie\n");
        }
    }
    return 0;
}
